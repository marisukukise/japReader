html {
  font-size: 17px;
}

#info,
#controls,
#word-info,
#status-buttons,
#other-buttons,
#search-engines fieldset {
  word-wrap: break-word;
  display: flex;
  gap: 0;
  flex-wrap: wrap;
  height: auto;
  line-height: 1em;
  margin: 0;
  padding: 0;
}

#search-engines {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1em;
  text-align: center;
}

#info {
  justify-content: space-between;
  flex-direction: row;
}

#audio::before, #anki::before{
  font-size: 0.75em;
  height: 100%;
  margin-right: 0.5ex;
  color: var(--mainBackground);
  background-color: var(--mainFont);
}

#audio:hover::before, #anki:hover::before{
  color: var(--mainFont);
  background-color: var(--mainBackground);
}

#audio::before{
  content: "A";
  padding: 0 0.5ex;
}

#anki::before{
  content: "Q";
  padding: 0 0.5ex;
}

#controls {
  border-top: 1px solid var(--mainFont);
  justify-content: space-between;
  flex-direction: column;
}

#word-info {
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

#status-buttons,
#other-buttons {
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

#status-buttons {
  flex-direction: row;
}

#other-buttons {
  flex-direction: column;
}

#word-area {
  font-weight: bold;
  padding: 0.5em;
  text-align: center;
  font-size: 1.5em;
  color: var(--mainFont);
  text-shadow:
    -1px 0px var(--mainBackground),
    0 1px var(--mainBackground),
    1px 0 var(--mainBackground),
    0 -1px var(--mainBackground),
    0 0 5px var(--mainBackground);
}

#word-area .status {
  position: absolute;
  font-size: 0.5em;
  display: none;
}

#word-area.new {
  background-color: var(--statusNew);
}

#word-area.seen {
  background-color: var(--statusSeen);
}

#word-area.known {
  background-color: var(--statusKnown);
}

#word-area.ignored {
  background-color: var(--statusIgnored);
}

#dict {
  border-top: 1px solid var(--mainFont);
  word-wrap: break-word;
  overflow-y: auto;
  margin: 0;
  padding: 0;
}

#dict dt,
#dict dd {
  margin: 0;
  padding: 0;
}

#dict dd {
  margin-inline-start: 1em;
}

#dict ol {
  margin-block-start: 0em;
  padding-inline-start: 1em;
}

#dict ol li:nth-child(6n+1) {
  background-color: var(--dictListColor4);
}

#dict ol li:nth-child(6n+2) {
  background-color: var(--dictListColor3);
}

#dict ol li:nth-child(6n+3) {
  background-color: var(--dictListColor2);
}

#dict ol li:nth-child(6n+4) {
  background-color: var(--dictListColor1);
}

#dict ol li:nth-child(6n+5) {
  background-color: var(--dictListColor2);
}

#dict ol li:nth-child(6n+6) {
  background-color: var(--dictListColor3);
}


.sense-info-note,
.note-skipped {
  display: none;
}

#info {
  justify-content: space-between;
  flex-direction: row;
}

#audio::before, #anki::before{
  font-size: 0.75em;
  margin-right: 0.5ex;
  color: var(--mainBackground);
  background-color: var(--mainFont);
}

#audio:hover::before, #anki:hover::before{
  color: var(--mainFont);
  background-color: var(--mainBackground);
}

#audio::before{
  content: "A";
  font-family: monospace, monospace;
}

#anki::before{
  content: "Q";
  font-family: monospace, monospace;
}

#controls {
  border-top: 1px solid var(--mainFont);
  justify-content: space-between;
  flex-direction: column;
}

#word-info {
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

#status-buttons,
#other-buttons {
  margin: 0.5ex;
  flex-wrap: wrap;
  gap: 1ex;
  justify-content: center;
  align-items: center;
}

#controls {
  gap: 1ex;
}

#status-buttons {
  flex-direction: row;
}

#other-buttons {
  flex-direction: column;
}

#word-area {
  font-weight: bold;
  padding: 0.5em;
  text-align: center;
  font-size: 1.5em;
  color: var(--mainFont);
  text-shadow:
    -1px 0px var(--mainBackground),
    0 1px var(--mainBackground),
    1px 0 var(--mainBackground),
    0 -1px var(--mainBackground),
    0 0 5px var(--mainBackground);
}

#word-area .status {
  position: absolute;
  font-size: 0.5em;
}

#word-area.new {
  background-color: var(--statusNew);
}

#word-area.seen {
  background-color: var(--statusSeen);
}

#word-area.known {
  background-color: var(--statusKnown);
}

#word-area.ignored {
  background-color: var(--statusIgnored);
}

#dict {
  border-top: 1px solid var(--mainFont);
  word-wrap: break-word;
  overflow-y: auto;
  margin: 0;
  padding: 0;
}

#dict dt,
#dict dd {
  margin: 0;
  padding: 0;
}

#dict dd {
  margin-inline-start: 1em;
}

#dict ol {
  margin-block-start: 0em;
  padding-inline-start: 1em;
}

#dict ol li:nth-child(6n+1) {
  background-color: var(--dictListColor4);
}

#dict ol li:nth-child(6n+2) {
  background-color: var(--dictListColor3);
}

#dict ol li:nth-child(6n+3) {
  background-color: var(--dictListColor2);
}

#dict ol li:nth-child(6n+4) {
  background-color: var(--dictListColor1);
}

#dict ol li:nth-child(6n+5) {
  background-color: var(--dictListColor2);
}

#dict ol li:nth-child(6n+6) {
  background-color: var(--dictListColor3);
}


.sense-info-note,
.note-skipped {
  display: none;
}

fieldset img.symbol {
  filter: drop-shadow(0px 0px 4px var(--mainFont));
  max-width: 2em;
  margin-bottom: 0.5ex;
}

#search-engines fieldset {
  border: 0px;
}

.search {
  filter: invert(0.1) saturate(0.4);
  max-height: 1em;
  height: 1em;
  width: auto;
  border-bottom: 1px solid var(--mainFont);
  cursor: pointer;
}

.search:hover{
  filter: saturate(1);
}

.search > img {
  display: inline-block;
  height: 100%;
  box-sizing: border-box;
  max-width: 100%;
  max-height: 100%;
  width: 100%;
}

.btn {
  border: 1px solid var(--mainFont);
  background-color: transparent;
  padding: 0.25em;
  font-weight: bold;
  display: flex;
  align-items: center;
  text-align: center;
  cursor: pointer;
}

.btn:hover {
  color: var(--mainBackground);
  background-color: var(--mainFont);
}

.btn small {
  font-size: 0.7em;
  border-radius: 10%;
  background-color: var(--mainFont);
  color: var(--mainBackground);
  padding: 0 0.1em;
  margin-right: 0.1em;
}

.btn:hover small {
  background-color: var(--mainBackground);
  color: var(--mainFont);
}

.disabled {
  cursor: not-allowed;
  filter: contrast(0.5) blur(0.1px);
}

.disabled:hover {
  filter: invert(0.2) blur(0px);
}

#seen.disabled, #seen:not(.disabled):hover {
  background-color: var(--statusSeen);
}

#known.disabled, #known:not(.disabled):hover {
  background-color: var(--statusKnown);
}

#ignored.disabled, #ignored:not(.disabled):hover {
  background-color: var(--statusIgnored);
}
